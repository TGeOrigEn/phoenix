package org.untitled.phoenix.component.condition;

/**
 * <p>Данный класс представляет собой абстрактное условие, которое позволяет проверить, выполняется ли условие.</p>
 */
public abstract class BaseCondition {

    private boolean isEnabled = true;

    /**
     * <p>Позволяет установить, будет ли проверяться условие каждый раз, когда выполняется поиск компонента или какое-либо взаимодействие с ним.</p>
     * @param isEnabled состояние проверки условия
     */
    public final void setEnabled(boolean isEnabled) {
        this.isEnabled = isEnabled;
    }

    /**
     * <p>Возвращает значение, которое указывает, будет ли проверяться истинность условия при взаимодействии с компонентом.</p>
     * <ul>
     *     <li><b>Если условие включено</b>, то при выполнении поиска компонента или каких-либо взаимодействий с ним, каждый раз будет выполняться проверка, которая будет гарантировать, что компонент действительно соблюдает условие.</li>
     *     <li><b>Если условие выключено</b>, то при выполнении поиска компонента или каких-либо взаимодействий с ним, не будет выполняться проверка, которая бы гарантировала, что компонент действительно соблюдает условие.</li>
     * </ul>
     * @return
     * <p><b>true</b> - если условие будет автоматически проверяться</p>
     * <p><b>false</b> - если условие не будет автоматически проверяться</p>
     */
    public final boolean isEnabled() {
        return isEnabled;
    }

    /**
     * <p>Возвращает результат выполнения проверки.</p>
     * @return
     * <p><b>true</b> - если условие выполняется</p>
     * <p><b>false</b> - если условие не выполняется</p>
     */
    public abstract boolean isTrue();
}
